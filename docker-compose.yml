version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app/ml_models:/app/app/ml_models
      - ./backend/logs:/app/logs
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MODEL_CLASSIFIER_PATH=/app/app/ml_models/classifier_model.pkl
      - MODEL_REGRESSOR_PATH=/app/app/ml_models/regressor_model.pkl
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/app/ml_models:/app/app/ml_models
      - ./backend/logs:/app/logs
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MODEL_CLASSIFIER_PATH=/app/app/ml_models/classifier_model.pkl
      - MODEL_REGRESSOR_PATH=/app/app/ml_models/regressor_model.pkl
    command: celery -A app.worker.celery_app worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_GRAPHQL_ENDPOINT=http://localhost:8000/graphql
      - BACKEND_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
